version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-python37-dependencies-{{ checksum "requirements.txt" }}
        # fallback to using the latest cache if no exact match is found
        - v1-python37-dependencies-

    - run:
        name: install dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

    - save_cache:
        paths:
          - ./venv
        key: v1-python37-dependencies-{{ checksum "requirements.txt" }}

    - run:
        name: run tests
        command: |
          . venv/bin/activate
          ./manage.py test

    - store_artifacts:
        path: test-reports
        destination: test-reports

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: install cf-cli
          command: |
            apt-get update
            apt-get install wget gnupg2
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            apt-get update
            apt-get install cf-cli
      - run:
          name: deploy to cloud.gov
          command: |
            cf auth "$CLIENT_ID" "$CLIENT_SECRET" --client-credentials
            ./deploy-cloudgov.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 45 * * *"
          filters:
            branches:
              only: master
    jobs:
      - test
